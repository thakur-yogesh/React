{"version":3,"sources":["SeasonDisplay.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Lat","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMsg","console","log","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"iNAkBMA,G,MAAe,CACnBC,OAAO,CACLC,KAAK,sBACLC,SAAS,OAEXC,OAAO,CACLF,KAAK,kBACLC,SAAS,eAIPE,EAAY,SAACC,EAAIC,GAClB,OAAGA,EAAM,GAAKA,EAAO,EACXD,EAAM,EAAI,SAAW,SAGtBA,EAAM,EAAI,SAAW,UAOpBE,EAtCO,SAACC,GAErB,IAAMC,EAASL,EAAUI,EAAME,KAAI,IAAIC,MAAOC,YAFhB,EAGNb,EAAaU,GAAzBP,GAHkB,EAGvBD,KAHuB,EAGlBC,UAEZ,OACE,yBAAKW,UAAS,yBAAoBJ,IAChC,uBAAGI,UAAS,oBAAeX,EAAf,mBACZ,4BAAgB,WAAXO,EAAA,4CAAqE,6BAC1E,4BAAgB,WAAXA,EAAqB,oBAArB,yBACL,uBAAGI,UAAS,qBAAgBX,EAAhB,qBCVZY,EAAU,SAACN,GACf,OACE,yBAAKK,UAAW,oBACd,yBAAKA,UAAU,sBACTL,EAAMO,WAMlBD,EAAQE,aAAe,CACrBD,QAAQ,eAGKD,QCVTG,E,4MACJC,MAAQ,CAACR,IAAI,KAAKS,SAAS,I,kEACR,IAAD,OACjBC,QAAQC,IAAI,6BACZC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAG,EAAKC,SAAS,CAACjB,IAAIgB,EAASE,OAAOC,cAC9C,SAAAC,GAAG,OAAG,EAAKH,SAAS,CAACR,SAASW,EAAIf,e,sCAInC,OAAGgB,KAAKb,MAAMC,WAAaY,KAAKb,MAAMR,IAC7B,sCAAYqB,KAAKb,MAAMC,WAE5BY,KAAKb,MAAMC,UAAYY,KAAKb,MAAMR,IAC7B,kBAAC,EAAD,CAAeL,IAAK0B,KAAKb,MAAMR,MAEjC,kBAAC,EAAD,CAASK,QAAQ,gC,+BAKvB,OACE,yBAAKF,UAAU,cACZkB,KAAKC,qB,GAvBGC,IAAMC,WA4BxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.8fc00e75.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst SeasonDisplay = (props) =>{\r\n\r\n  const season = getSeason(props.Lat,new Date().getMonth());\r\n  const {text,iconName} = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left ${iconName} icon massive`} />\r\n      <h1>{season === 'winter'? `Wow!! it's winter\\n`:`Yuck it's Summer\\n`}</h1><br />\r\n      <h1>{season === 'winter'? '\\nGet some coffee' : `\\nLet's hit the beach`}</h1>\r\n      <i className={`icon-right ${iconName} icon massive`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst seasonConfig = {\r\n  summer:{\r\n    text:`let's hit the beach`,\r\n    iconName:'sun'\r\n  },\r\n  winter:{\r\n    text:'Get some coffee',\r\n    iconName:'snowflake'\r\n  }\r\n}\r\n\r\nconst getSeason = (lat,month) =>{\r\n     if(month>2 && month <9){\r\n        return lat > 0 ? 'summer' : 'winter';\r\n     }\r\n     else{\r\n       return lat > 0 ? 'winter' : 'summer';\r\n     }\r\n}\r\n\r\n\r\n\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\n\r\nconst Spinner = (props) =>{\r\n  return(\r\n    <div className =\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">\r\n           {props.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message:'loading!!! '\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay'\r\nimport Spinner from './spinner'\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {Lat:null,errorMsg:''};\r\n componentDidMount(){\r\n   console.log('my component get rendered');\r\n   window.navigator.geolocation.getCurrentPosition(\r\n     position =>this.setState({Lat:position.coords.latitude}),\r\n     err =>this.setState({errorMsg:err.message})\r\n   );\r\n }\r\n  renderContent(){\r\n    if(this.state.errorMsg && !this.state.Lat){\r\n      return <div>Error:{this.state.errorMsg}</div>;\r\n    }\r\n    if(!this.state.errorMsg && this.state.Lat){\r\n      return <SeasonDisplay lat={this.state.Lat} />\r\n    }\r\n    return <Spinner message=\"Please allow the location\"/>;\r\n  }\r\n\r\n\r\n   render(){\r\n     return(\r\n       <div className=\"border red\">\r\n         {this.renderContent()}\r\n       </div>\r\n     )}\r\n};\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}